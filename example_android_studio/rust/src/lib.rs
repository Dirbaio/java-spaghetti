#![cfg(target_os = "android")]
use jni_android_sys::*;

use jni_sys::{jboolean, jobject, JNI_TRUE};
use jni_glue::{Argument, Env};
use android::view::KeyEvent;

#[no_mangle] pub extern "system" fn Java_com_maulingmonkey_jni_1bindgen_example_1android_1studio_MainActivity_dispatchKeyEvent(
    env:        &Env,
    _this:      jobject,
    key_event:  Argument<KeyEvent>,
) -> jboolean {
    let key_event = unsafe { key_event.with_unchecked(env) }; // Unsafe boilerplate not yet autogenerated.

    if let Some(key_event) = key_event {
        // Err = Java exception was thrown.
        let is_enter = key_event.getKeyCode().unwrap() == KeyEvent::KEYCODE_ENTER;
        let is_down  = key_event.getAction().unwrap()  == KeyEvent::ACTION_DOWN;
        if is_enter && is_down {
            println!("ENTER pressed"); // Not that you can see this...
        }
    }

    JNI_TRUE // JNI boilerplate not yet autogenerated
}
